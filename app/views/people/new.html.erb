<style>

  .tt_controls_year_of_birth #qwerty { display:none; }
  .tt_controls_age_estimate #qwerty { display:none; }
  .tt_controls_cell_phone_number #qwerty { display:none; }
  .tt_controls_ground_phone_number #qwerty { display:none; }
  .tt_controls_office_phone_number #qwerty { display:none; }

  .tt_controls_year_of_birth #Unknown { display:block; }
  .tt_controls_age_estimate #Unknown { display:none; }

  .tt_controls_middle_name  #na { display: block; }
  .tt_controls_ground_phone_number #Unknown { display:block; }

  .tt_controls_region_of_origin .keyboard{display:none;}
  .tt_controls_current_region .keyboard{display:none;}

  .tt_controls_month_of_birth .keyboard{display:none;}
  #tt_page_month_of_birth .options{height:570px;}
  #tt_page_month_of_birth .options li{font-size:30px;}

  .tt_controls_home_village #space , #apostrophe { display:inline; }
  .tt_controls_home_district #num  { display:none; }

  .tt_controls_current_traditional_authority_ta #space { display:inline; }

  .tt_controls_current_village_residence #space { display:inline; }

  .tt_controls_cell_phone_number #num , #plus, #apostrophe, #star, #char, #abc, #date, #slash, #minus, #comma, #percent, #decimal { display:none; }

  .tt_controls_guardian_cell_phone_number #num , #plus, #apostrophe, #star, #char, #abc, #date, #slash, #minus, #comma, #percent, #decimal { display:none; }

  .tt_controls_home_phone_number #num , #plus, #apostrophe, #star, #abc, #date, #slash, #minus, #comma, #percent, #decimal { display:none; }

  .tt_controls_office_phone_number #num , #plus, #apostrophe, #star, #abc, #date, #slash, #minus, #comma, #percent, #decimal { display:none; }

  .tt_controls_occupation .keyboard{display:none;}
  #tt_page_occupation .options{height:500px;}
  #tt_page_occupation .options li{font-size:30px;}
  #space {display:inline;}

  .nota #na {
    display: block;
  }

  #num{ display:block; }
  #char{ display:none; }
  #apostrophe { display:inline; }

  .tt_controls_home_district #num{ display:none; }
  .tt_controls_current_district #num{ display:none; }

  .tt_controls_current_city_place_or_area_of_residence #num{ display:block; }
  .tt_controls_current_city_place_or_area_of_residence #char{ display:block; }

  .tt_controls_closest_landmark_or_plot_number #num{ display:block; }
  .tt_controls_closest_landmark_or_plot_number #char{ display:block; }

  .azButton .numericKeyboard #char {
    display: block;
  }

</style>

<script type="text/javascript">
  var tt_cancel_destination = "/"
  var date_diff = "<%= @date_diff %>"

  function validateDate() {
    selectYear = parseInt(document.getElementsByName('person[birth_year]')[0].value);
    selectDay = parseInt(document.getElementsByName('person[birth_day]')[0].value);
    date = new Date
    currYear = date.getFullYear();
    currDay = date.getDate();
    availableMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

    if (selectYear == currYear){
      currentMonth = [];
      numOfloops = ((new Date).getMonth() + 1);
      for(var i = 0; i < numOfloops; i++){
        currentMonth.push(availableMonths[i]);
      }
      rule = currentMonth.join("|");
      rule = rule + "|Unknown";
      return $('touchscreenInput'+tstCurrentPage).setAttribute('validationRule',rule);
    }
    if (selectYear != currYear) {
      rule = availableMonths.join("|");
      rule = rule + "|Unknown";
      return $('touchscreenInput'+tstCurrentPage).setAttribute('validationRule',rule);
    }
  }

  function validateYear() {
    selectYear = parseInt(document.getElementsByName('person[birth_year]')[0].value);
    selectDay = parseInt(document.getElementsByName('person[birth_day]')[0].value);
    date = new Date
    currYear = date.getFullYear();
    currDay = date.getDate();

    abMax = parseInt(date_diff.split("-")[0]) - 10;

    jQuery('#touchscreenInput'+ tstCurrentPage).attr("absoluteMax", date_diff.split("-")[0]);
    console.log(date_diff);

  }
  function updateMonthAbsMax(){
    var month = jQuery('#person_birth_month').val();
    var year = jQuery('#person_birth_year').val();
    
    if ((parseInt(year) == parseInt(date_diff.split("-")[0])) && (parseInt(month) > parseInt(date_diff.split("-")[1]))) {
      var message = "Month selected is greater than Current Month";
      setTimeout(function () {
        gotoPage(tstCurrentPage - 1, false, true);
        showMessage(message,null,30000);
      }, 10);
    }
  }

  function updateDayAbsMax(){
    var month = jQuery('#person_birth_month').val();
    var year = jQuery('#person_birth_year').val();
    if ((parseInt(year) == parseInt(date_diff.split("-")[0])) && (parseInt(month) == parseInt(date_diff.split("-")[1]))){
      jQuery('#touchscreenInput'+ tstCurrentPage).attr("absoluteMax", date_diff.split("-")[2]);
    }
  }

  function validateDay(){
    date = new Date
    currYear = date.getFullYear();
    currDay = date.getDate();
    currMonth = date.getMonth() + 1;
    selected_month = parseInt(document.getElementsByName('person[birth_month]')[0].value)
    selectYear = parseInt(document.getElementsByName('person[birth_year]')[0].value);
    if (selectYear == currYear) {
      if (selected_month == currMonth){
        return $('touchscreenInput'+tstCurrentPage).setAttribute('absoluteMax',currDay);
      }
    }
  }

  function dateCreate(date_str){
    intyear = 0 ; intmonth = 0 ; intday = 0;
    intyear = parseInt(date_str.substring(0,4))
    intmonth = (parseInt(date_str.substring(5,7)) - 1)
    intday = (parseInt(date_str.substring(8,10)))

    if (intmonth == -1)
      intmonth = (parseInt(date_str.substring(5,7).substring(1,2)) - 1)

    if (intday == 0)
      intday = parseInt(date_str.substring(8,10).substring(1,2))

    return new Date(intyear,intmonth,intday);
  }

  function set_ajaxURL_for_suggestions(url, filter_value) {
    $('touchscreenInput'+tstCurrentPage).setAttribute('ajaxURL', url + filter_value + "&search_string=");
    listSuggestions(tstCurrentPage);
  }

</script>

<form action="/people/create" method="POST">

  <%= text_field_tag "person[names][given_name]", params[:given_name],
    {:id => 'given_name',
    :field_type => 'alpha',
    :helpText => 'First name',
    :ajaxURL => '/person_names/given_names?search_string=',
    :allowFreeText => true,
    :condition => '$("given_name").value == ""'} %>

  <%= text_field_tag "person[names][family_name]", params[:family_name],
    {:id => 'family_name',
    :field_type => 'alpha',
    :helpText => 'Last name',
    :ajaxURL => '/person_names/family_names?search_string=',
    :allowFreeText => true, :condition => '$("family_name").value == ""'} %>

  <%= text_field_tag "person[names][middle_name]", params[:middle_name],
    {:id => 'middle_name',
    :field_type => 'alpha',
    :helpText => 'Middle name',
    :ajaxURL => '/person_names/middle_name?search_string=',
    :allowFreeText => true,
    :optional => true,
    :condition => '$("middle_name").value == ""',
    :tt_pageStyleClass => "azButton" } %>

  <%= text_field_tag "person[birth_year]", nil,
    {:helpText => 'Year of Birth',
    :field_type => 'number',
    :absoluteMin => "1900", :min => "1900",
    :tt_onLoad => 'validateYear()',
    :tt_pageStyleClass => "Numeric NumbersOnly"}  %>

  <%= select_tag "person[birth_month]", month_name_options,
    {:helpText => 'Month of Birth',
    :condition => '$("person_birth_year").value.toLowerCase() != "unknown"',
    :validationMessage => 'Please enter a valid date',
    :tt_onLoad =>" validateDate();__$('keyboard').style.display = 'none';",
    :tt_onUnLoad => "updateMonthAbsMax();"}%>

  <%= text_field_tag "person[age_estimate]", nil,
    {:helpText => 'Age Estimate',
    :absoluteMin => 10,
    :absoluteMax => 120,
    :field_type => 'number',
    :condition => '$("person_birth_year").value == "Unknown"',
    :tt_onLoad => "$('nextButton').style.display = 'block';",
    :tt_pageStyleClass => "Numeric NumbersOnly"} %>

  <%= text_field_tag "person[birth_day]",  nil,
    :field_type => 'number',
    :helpText => 'Birth Day',
    :validationMessage => 'Please enter a valid date',
    :condition => '($("person_birth_year").value != "Unknown") && ($("person_birth_month").value != "Unknown")',
    :tt_onLoad =>  "validateDay(); getDayOfMonthPicker($('person_birth_year').value, $('person_birth_month').value);$('nextButton').style.display = 'block';updateDayAbsMax();"
%>

  <label for="region_region_name">Region of Origin</label>
  <%= text_field "region" , 'region_name',
    :xhelpText => 'Region',
    :tt_requireNextClick => false,
    :ajaxURL => '/people/region?value=',
    :tt_onLoad => "$('nextButton').style.display = 'none';"%>

  <%= text_field_tag "person[addresses][address2]", params[:address2],
    {:id => 'address2',
    :tt_requireNextClick => false,
    :ajaxURL => '',
    :field_type => 'alpha',
    :helpText => 'Home District',
    :allowFreeText => false,
    :tt_onLoad => "set_ajaxURL_for_suggestions('/people/district?filter_value=' ,document.getElementById('region_region_name').value);$('nextButton').style.display = 'none';" } %>

  <%= text_field_tag "p['address2_a']" , nil,
    {:id => 'address2_a',
    :tt_onUnLoad => '$("address2").value = $("address2_a").value',
    :condition => '$("address2").value == "Other"',
    :id => 'address2_a',:tt_requireNextClick => true,
    :ajaxURL => '/person_addresses/address2?search_string=',
    :allowFreeText => true,
    :field_type => 'alpha',
    :helpText => 'Specify Home District',
    :tt_onLoad => "$('nextButton').style.display = 'block';" } %>

  <%= text_field "person[addresses]" , 'county_district',
    :condition => '$("address2").value != "Other"',
    :helpText => 'Ancestral Traditional Authority (T/A) or area of residence',
    :tt_requireNextClick => false,
    :ajaxURL => '',
    :tt_pageStyleClass => "azButton",
    :tt_onLoad => "set_ajaxURL_for_suggestions('/people/traditional_authority?filter_value=' ,document.getElementById('address2').value);$('nextButton').style.display = 'none';" %></p>

<%= text_field "p[addresses]" , 'county_district_a',
  :tt_onUnLoad => '$("person_addresses_county_district").value = $("p_addresses_county_district_a").value',
  :condition => '$("address2").value == "Other"',
  :ajaxURL => '/person_addresses/traditional_authority?search_string=',
  :helpText => 'Specify Ancestral Traditional Authority (T/A) or area of residence',
  :tt_pageStyleClass => "azButton",
  :allowFreeText => true,
  :tt_onLoad => "$('nextButton').style.display = 'block';"  %>

<%= text_field_tag "person[addresses][neighborhood_cell]", params[:city_village],
  {
  :field_type => 'alpha',
  :helpText => "Home Village",
  :tt_requireNextClick => false,
  :tt_pageStyleClass => "azButton",
  :ajaxURL => '',
  :allowFreeText => false ,
  :tt_onLoad => "set_ajaxURL_for_suggestions('/people/village?filter_value=' ,document.getElementById('person_addresses_county_district').value);$('nextButton').style.display = 'none';"}%>

<%= text_field "filter" , 'region', 
  :helpText => 'Current Region',
  :tt_requireNextClick => false,
  :ajaxURL => '',
  :tt_onLoad => "set_ajaxURL_for_suggestions('/people/region?filter_value=' ,document.getElementById('person_addresses_county_district').value);$('nextButton').style.display = 'none';" %>

<%= text_field_tag "person[addresses][state_province]", params[:state_province], {
  :id => 'state_province',
  :field_type => 'alpha',
  :helpText => 'Current District',
  :tt_requireNextClick => false,
  :ajaxURL => '',
  :allowFreeText => false,
  :tt_onLoad => "set_ajaxURL_for_suggestions('/people/district?filter_value=' ,document.getElementById('filter_region').value);$('nextButton').style.display = 'none';" } %>

<%= text_field "filter" , 't_a',
  :condition => '$("state_province").value != "Other"',
  :helpText => 'Traditional Authority (T/A) or area of residence',
  :tt_requireNextClick => false,
  :ajaxURL => "",
  :tt_pageStyleClass => "azButton",
  :tt_onLoad => "set_ajaxURL_for_suggestions('/people/traditional_authority?filter_value=' ,document.getElementById('state_province').value);$('nextButton').style.display = 'none';" %></p>

<%= text_field "filter" , 't_a_a', 
  :tt_onUnLoad => 'if ($("t_a_a")) {$("t_a").value = $("t_a_a").value}',
  :condition => '$("state_province").value == "Other"',
  :ajaxURL => "/person_addresses/traditional_authority?search_string=",
  :tt_pageStyleClass => "azButton",
  :allowFreeText => true,
  :helpText => 'Specify Traditional Authority (T/A) or area of residence',
  :tt_onLoad => "$('nextButton').style.display = 'block';" %>

<%= text_field_tag "person[addresses][city_village]", params[:city_village],
  {:condition => '$("filter_t_a").value != "Other"',
  :field_type => 'alpha',
  :helpText => 'Location/Village',
  :tt_requireNextClick => false,
  :tt_pageStyleClass => "azButton",
  :ajaxURL => "",
  :allowFreeText => false ,
  :tt_onLoad => 'set_ajaxURL_for_suggestions("/people/village?filter_value=" ,document.getElementById("filter_t_a").value);$("nextButton").style.display = "none";'} %>

<%= text_field_tag "p[addresses][city_village_a]", params[:city_village_a],
  {:tt_onUnLoad => '$("person_addresses_city_village").value = $("p_addresses_city_village_a").value',
  :condition => '$("filter_t_a").value == "Other"' ,
  :ajaxURL => "/person_addresses/village?search_string=",
  :allowFreeText => true, :field_type => 'alpha',
  :helpText => 'Specify Location/Village',
  :tt_pageStyleClass => "azButton",
  :tt_requireNextClick => true, :tt_onLoad => "$('nextButton').style.display = 'block';"} %>


<%= text_field_tag "person[addresses][address1]",  params[:address1],
  {	:id => 'address1',
  :helpText => 'Closest Landmark or Plot Number<br /><span style="font-size:0.7em;font-style:italic">(Please do not include these words: Next to, close, in front of, behind)</span>',
  :allowFreeText => true, :ajaxURL => '',
  :tt_pageStyleClass => "azButton",
  :tt_onLoad => "set_ajaxURL_for_suggestions('/people/landmark?filter_value=' ,document.getElementById('person_addresses_city_village').value);$('nextButton').style.display = 'block';" }%>

<%= text_field_tag "person[cell_phone_number]",  params[:cell_phone_number],
  {
  :field_type => 'number',
  :helpText => 'Cell Phone Number',
  :validationRule => "^0\\d{7}$|Unknown|Not Available|N\/A|^0\\d{9}$",
  :validationMessage => "Not a valid phone number",
  :tt_pageStyleClass => "nota",
  :id => 'cellphone'
}
%>

<%= text_field_tag "person[guardian_cell_phone_number]",  params[:guardian_cell_phone_number],
  {
  :field_type => 'number',
  :helpText => 'Next of Kin Cell Phone Number',
  :validationRule => "^0\\d{7}$|Unknown|Not Available|N\/A|^0\\d{9}$",
  :validationMessage => "Not a valid phone number",
  :tt_pageStyleClass => "nota NumbersOnlyWithUnknown",
  :id => 'guardian_cellphone'
}
%>

<%= hidden_field_tag "person[gender]", "M" %>
<%= hidden_field_tag "person[patient]", "" %>

<%= hidden_field_tag "relation", params[:relation] %>

<%= hidden_field_tag :identifier, params[:identifier] %>

</form>
